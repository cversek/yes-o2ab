###############################################################################
# testing.cfg
# desc: development settings for the yes_o2ab package and its applications
# last update:       7/06/2013 (cwv@yesinc.com)
###############################################################################

#Settings for data directories
[ paths ]
data_dir = '~/yes_o2ab/data'            #will be in user's home directory
log_dir  = '~/yes_o2ab/log'             #will be in user's home directory

#Localization Settings
[ locale ]
site = "testing"

################################################################################
#Settings for Hardware Drivers
[ devices ]
    #Misc ----------------------------------------------------------------------
    [[ solar_ephemeris ]]
        module = yes_o2ab.drivers.devices.novas.solar_ephemeris
        latitude = 29.5381
        longitude = -81.2233
        ephem_filepath = /etc/Automat/yes_o2ab/novas/DE405.bin
        deltat_preds_filepath = /etc/Automat/yes_o2ab/novas/deltat.preds.2012-Q4

    [[ daq1 ]]        #Phidgets 1018 Interface Kit
        module           = yes_o2ab.drivers.fake_devices.phidgets.kit1018
        serial_number    = 148223
        [[[ mutex ]]]
        
    [[ daq2 ]]        #Phidgets 1018 Interface Kit
        module           = yes_o2ab.drivers.fake_devices.phidgets.kit1018
        serial_number    = 148221
        [[[ mutex ]]]
        
    [[ freq_counter ]] #Phidgets 1054 Frequency Counter
        module           = yes_o2ab.drivers.fake_devices.phidgets.frequencyCounter1054
        serial_number    = 143033
        [[[ mutex ]]]
        
    [[ ups ]]         #APC Uninterruptible Power Supply
        module           = yes_o2ab.drivers.devices.APC.smart_ups
    
    #Optics --------------------------------------------------------------------
    [[ camera ]]
        module          = yes_o2ab.drivers.fake_devices.FLI.camera
        serial_number   = 'ML0133911'
        image_area      = 0,0,3072,2048
        default_exposure_time = 10 #milliseconds
        [[[ mutex ]]]

    [[ focuser ]]
        module          = yes_o2ab.drivers.fake_devices.FLI.focuser
        serial_number   = 'PDF-001'
        [[[ mutex ]]]

    [[ filter_wheel ]] 
        module          = yes_o2ab.drivers.fake_devices.FLI.filter_wheel
        serial_number   = 'CL0044611'
        [[[ wheel_B ]]] #Band pass
        slot0 = Open
        slot1 = O2A
        slot2 = H2O
        slot3 = Opaque
        slot4 = Nothing
        [[[ wheel_A ]]] #Auxiliary
        slot0 = Open
        slot1 = Polarizer parallel to slit
        slot2 = Polarizer perpendicular to slit
        slot3 = ND 1.0
        slot4 = Diffuser
        [[[ mutex ]]]

    #Motors --------------------------------------------------------------------
    [[ motor_controller1 ]]
        module          = yes_o2ab.drivers.fake_devices.orientalmotor.EMP402
        port            = /dev/ttyS4
        [[[ mutex ]]]

    [[ motor_controller2 ]]
        module          = yes_o2ab.drivers.fake_devices.orientalmotor.EMP402
        port            = /dev/ttyUSB0
        [[[ mutex ]]]
    
    [[ az_motor ]]
        module           = yes_o2ab.drivers.fake_devices.orientalmotor.CMD2120P
        axis             = 1
        degrees_per_step = 0.01875
        default_speed    = 1000 #Hz
        limit_sensor_true = 1  #limit switch "normally open"
        [[[ devices ]]]
            motor_controller = motor_controller1

    [[ el_motor ]]
        module           = yes_o2ab.drivers.fake_devices.orientalmotor.CMD2120P
        axis             = 2
        degrees_per_step = 0.01875
        default_speed    = 1000 #Hz
        limit_sensor_true = 1  #limit switch "normally open"
        [[[ devices ]]]
            motor_controller = motor_controller1
            
    [[ band_motor ]]
        module           = yes_o2ab.drivers.fake_devices.orientalmotor.CMD2120P
        axis             = 1
        degrees_per_step = 0.45
        default_speed    = 1000 #Hz
        limit_sensor_true = 0  #limit switch "normally open"
        [[[ devices ]]]
            motor_controller = motor_controller2

    [[ flip_motor ]]
        module           = yes_o2ab.drivers.fake_devices.orientalmotor.CMD2120P
        axis             = 2
        degrees_per_step = 0.45
        default_speed    = 100 #Hz
        limit_sensor_true = 0  #limit switch "normally open"
        [[[ devices ]]]
            motor_controller = motor_controller2

    [[ picomotor_driver ]]
        module           = yes_o2ab.drivers.fake_devices.newfocus.picomotor_driver8753
        port             = /dev/ttyUSB4
        addr             = 1  #address on the LDCN network
        baudrate         = 19200
        [[[ mutex ]]]
        
    [[ picomotorA ]]  #New Focus 8354 Intelligent Picomotor channel A
        module           = yes_o2ab.drivers.fake_devices.newfocus.picomotor8354           
        channel          = A
        default_speed    = 100 #Hz
        [[[ devices ]]]
            driver       = picomotor_driver

    [[ picomotorB ]]  #New Focus 8354 Intelligent Picomotor channel B
        module           = yes_o2ab.drivers.fake_devices.newfocus.picomotor8354          
        channel          = B
        default_speed    = 100 #Hz
        [[[ devices ]]]
            driver       = picomotor_driver

#    #Temperature ---------------------------------------------------------------
    #DAQ 1 Sensors
    [[ therm0_FW ]]  #Filter Wheel Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = FW_temp
        daq_channel      = 0
        V0               = 0.01021 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm1_OT ]]  #Optic Table Center Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = OT_temp
        daq_channel      = 1
        V0               = -0.07489 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm2_FB ]]  #Fore Optic Bracket Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = FB_temp
        daq_channel      = 2
        V0               = 0.02974 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm3_GR ]]  #Grating Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = GR_temp
        daq_channel      = 3
        V0               = -0.01910 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm4_MB ]]  #Mirror Bracket Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = MB_temp
        daq_channel      = 4
        V0               = 0.02364 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm5_EB ]]  #Electrical Box Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = EB_temp
        daq_channel      = 5
        V0               = -0.01142 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm6_RA ]]  #Room Air Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = RA_temp
        daq_channel      = 6
        V0               = 0.04439 #volts
        [[[ devices ]]]
        daq = daq1
    [[ therm7_OA ]]  #Outside Air Temperature
        module           = yes_o2ab.drivers.fake_devices.ussensor.DC103G9G_10k_thermistor
        name             = OA_temp
        daq_channel      = 7
        V0               = 0.0 #volts
        [[[ devices ]]]
        daq = daq1
        
    #DAQ 2 Sensors
    [[ sensor_SA_press ]]  #Spectrometer Air Pressure [Inches Hg]
                           # AP = A + B*(SA_press_raw_voltage + 0.4*(SA_temp_raw_voltage-C))
        module           = yes_o2ab.drivers.fake_devices.custom.PTHboard_pressure
        name             = SA_press
        daq_channel      = 4
        A                = 22.775
        B                = 2.9444
        C                = 3.08
        [[[ devices ]]]
        daq = daq2
        temp_sensor = sensor_SA_temp
    [[ sensor_SA_temp ]]   #Spectrometer Air Temperature
                           # PC = SA_temp_raw_voltage + V0 
        module           = yes_o2ab.drivers.fake_devices.custom.PTHboard_temperature
        name             = SA_temp
        daq_channel      = 5
        V0               = -0.10947
        [[[ devices ]]]
        daq = daq2
    [[ sensor_SA_humid ]]  #Spectrometer Air Humidity, RH = (sensor_SA_raw_voltage/5.0 - A)/B
        module           = yes_o2ab.drivers.fake_devices.custom.PTHboard_humidity
        name             = SA_humid
        daq_channel      = 6
        A = 0.13
        B = 0.0081
        [[[ devices ]]]
        daq = daq2
        
    #Other Sensors
    [[ sensor_windspeed ]]  #Wind speed in MPH
        module           = yes_o2ab.drivers.fake_devices.NRG_systems.NRG40_anemometer
        channel      = 0
        MPH_per_Hz   = 1.711
        s0_MPH       = 0.78
        [[[ devices ]]]
        freq_counter = freq_counter
 
################################################################################
[ controllers ]
    [[ solar_tracker ]]
       module            = yes_o2ab.drivers.controllers.solar_tracker
       [[[ configuration ]]]
           az_home_pos = 55.0
           el_home_pos = 90.0
       [[[ devices ]]]
           solar_ephemeris   = solar_ephemeris
           az_motor          = az_motor
           el_motor          = el_motor
    [[ image_capture ]]
       module            = yes_o2ab.drivers.controllers.image_capture
       [[[ configuration ]]]
           exposure_time = 100 #milliseconds
       [[[ devices ]]]
           camera = camera
       [[[ controllers ]]]
           flatfield_switcher = flatfield_switcher
           filter_switcher    = filter_switcher
           
    [[ band_switcher ]]
       module            = yes_o2ab.drivers.controllers.band_switcher
       [[[ configuration ]]]
           default_adjust_speed = 1000 #Hz
       [[[ devices ]]]
           band_motor    = band_motor
           
    [[ band_adjuster ]]
       module            = yes_o2ab.drivers.controllers.band_adjuster
       [[[ configuration ]]]
           default_speed = 100 #Hz
           default_acc   = 10 #Hz
           step_size = 10
           step_direction = "+1"
       [[[ devices ]]]
           picomotor_driver = picomotor_driver
           picomotorA    = picomotorA
           picomotorB    = picomotorB
       [[[ controllers ]]]
           band_switcher = band_switcher
    
    [[ filter_switcher ]]
       module            = yes_o2ab.drivers.controllers.filter_switcher
       [[[ devices ]]]
           filter_wheel = filter_wheel
           
    [[ flatfield_switcher ]]
       module            = yes_o2ab.drivers.controllers.flatfield_switcher
       [[[ devices ]]]
           flip_motor  = flip_motor
       [[[ configuration ]]]
           out_angle   = 91 #degrees

    [[ focus_adjuster]]
       module            = yes_o2ab.drivers.controllers.focus_adjuster
       [[[ configuration ]]]
           step_size = 10        #1/1000 of an inch
           step_direction = "+1"
       [[[ devices ]]]
           focuser = focuser

    [[ condition_monitor ]]
       module            = yes_o2ab.drivers.controllers.condition_monitor
       [[[ configuration ]]]
           interval = 10 #seconds
       [[[ devices ]]]
           camera = camera
           ups    = ups
           therm0 = therm0_FW
           therm1 = therm1_OT
           therm2 = therm2_FB
           therm3 = therm3_GR
           therm4 = therm4_MB
           therm5 = therm5_EB
           therm6 = therm6_RA
           therm7 = therm7_OA
           sensor_SA_press  = sensor_SA_press
           sensor_SA_temp   = sensor_SA_temp
           sensor_SA_humid  = sensor_SA_humid
           sensor_windspeed = sensor_windspeed
    
    [[ safety_monitor_server ]]
        module           = yes_o2ab.drivers.controllers.safety_monitor
        interface_mode   = server
        [[[ configuration ]]]
            port = 1111
        [[[ controllers ]]]
            condition_monitor = condition_monitor
    
    [[ safety_monitor_client ]]
        module           = yes_o2ab.drivers.controllers.safety_monitor
        interface_mode   = client
        [[[ controllers ]]]
            server = safety_monitor_server
